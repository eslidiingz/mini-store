//
// Autogenerated by `prisma-import`
// Any modifications will be overwritten on subsequent runs.
//

//
// base.prisma
//

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//
// categories.prisma
//

model Category {
  id            String        @id @unique @default(uuid())
  name          String
  slug          String
  is_active     Boolean       @default(true)
  type          CategoryType  @default(USER)
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  deleted_at    DateTime?
  products      Product[]
  sale_products SaleProduct[]

  @@map("categories")
}

enum CategoryType {
  SYSTEM
  USER
}

//
// products.prisma
//

model Product {
  id          String    @id @unique @default(uuid())
  barcode     String
  name        String
  price       Decimal   @default(0)
  cost_price  Decimal   @default(0)
  description String?
  photo       String?
  is_active   Boolean   @default(true)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  deleted_at  DateTime?

  category_id   String
  category      Category?     @relation(fields: [category_id], references: [id])
  stocks        Stock[]
  sale_products SaleProduct[]

  @@map("products")
}

//
// sale_products.prisma
//

model SaleProduct {
  id            String    @id @unique @default(uuid())
  product_name  String
  price         Decimal
  amount        Int
  total         Decimal
  discount      Decimal?
  total_balance Decimal
  cost          Decimal
  sale_id       String
  product_id    String
  category_id   String
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  deleted_at    DateTime?

  sale     Sale?     @relation(fields: [sale_id], references: [id])
  product  Product?  @relation(fields: [product_id], references: [id])
  category Category? @relation(fields: [category_id], references: [id])

  @@index([sale_id, product_id, category_id])
  @@map("sale_products")
}

//
// sales.prisma
//

model Sale {
  id             String    @id @unique @default(uuid())
  total_item     Int
  total_price    Decimal
  total_discount Decimal?
  total_vat      Decimal?
  total_balance  Decimal
  total_cost     Decimal
  user_id        String
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  deleted_at     DateTime?

  user          User?         @relation(fields: [user_id], references: [id])
  sale_products SaleProduct[]

  @@map("sales")
}

//
// stocks.prisma
//

model Stock {
  id         String    @id @unique @default(uuid())
  product_id String
  amount     Int
  user_id    String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  product Product? @relation(fields: [product_id], references: [id])
  user    User?    @relation(fields: [user_id], references: [id])

  @@map("stocks")
}

//
// users.prisma
//

model User {
  id         String    @id @unique @default(uuid())
  name       String
  is_active  Boolean   @default(true)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?

  stocks Stock[]
  sales  Sale[]

  @@map("users")
}
